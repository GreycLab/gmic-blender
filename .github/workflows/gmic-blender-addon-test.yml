name: gmic-blender-testing

on: 
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        blender-version: ["2.80", "2.81a", "2.82a", "2.83.0", "2.90.0"]
        os: [ubuntu-latest, macos-latest] #, windows-latest]
        gmic-py-version: ["2.8.4"]
    env:
      BLENDER_CACHE: ${{ github.workspace }}/.blender_releases_cache # The place where blender releases are downloaded
      BLENDER_VERSION: ${{ matrix.blender-version }}
      GMICPY_DOWNLOADS_CACHE: ${{ github.workspace }}/.gmicpy_wheels_cache # The place where blender releases are downloaded

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Cache Gmic Python ${{ matrix.gmic-py-version }} all-platforms wheels download
      uses: actions/cache@v1
      with:
        path: ${{ env.GMICPY_DOWNLOADS_CACHE }}
        key: gmic-py-${{ matrix.gmic-py-version }}
    - name: Cache ${{ matrix.os }} Blender ${{ matrix.blender-version }} release download
      uses: actions/cache@v1
      with:
        path: ${{ env.BLENDER_CACHE }}
        key: ${{ matrix.os }}-blender-${{ matrix.blender-version }}
    - name: Install MacOSX fftw and libomp with Homebrew
      if: matrix.os == 'macos-latest'
      run: |
        brew install fftw libomp
    - name: Grab Blender ${{ matrix.blender-version }}, build gmic-blender ${{ matrix.gmic-py-version}} and test them with pytest
      run: |
        pip install -r make_addon_requirements.txt
        python make_addon_zip.py
        pip install -r blender_addon_tester_requirements.txt
        python test_gmic_blender_addon.py # Uses the BLENDER_VERSION environment variable
    - name: Expose coverage as a CI download
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.os }}-blender-${{ matrix.blender-version }}-coverage.xml
        path: coverage.xml
